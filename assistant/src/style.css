/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*:where(.petercat-lui,.petercat-lui *),
::before:where(.petercat-lui,.petercat-lui *),
::after:where(.petercat-lui,.petercat-lui *) {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before:where(.petercat-lui,.petercat-lui *),
::after:where(.petercat-lui,.petercat-lui *) {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

.petercat-lui {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

.petercat-lui {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr:where(.petercat-lui,.petercat-lui *) {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]):where(.petercat-lui,.petercat-lui *) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1:where(.petercat-lui,.petercat-lui *),
h2:where(.petercat-lui,.petercat-lui *),
h3:where(.petercat-lui,.petercat-lui *),
h4:where(.petercat-lui,.petercat-lui *),
h5:where(.petercat-lui,.petercat-lui *),
h6:where(.petercat-lui,.petercat-lui *) {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a:where(.petercat-lui,.petercat-lui *) {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b:where(.petercat-lui,.petercat-lui *),
strong:where(.petercat-lui,.petercat-lui *) {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code:where(.petercat-lui,.petercat-lui *),
kbd:where(.petercat-lui,.petercat-lui *),
samp:where(.petercat-lui,.petercat-lui *),
pre:where(.petercat-lui,.petercat-lui *) {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small:where(.petercat-lui,.petercat-lui *) {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub:where(.petercat-lui,.petercat-lui *),
sup:where(.petercat-lui,.petercat-lui *) {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub:where(.petercat-lui,.petercat-lui *) {
  bottom: -0.25em;
}

sup:where(.petercat-lui,.petercat-lui *) {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table:where(.petercat-lui,.petercat-lui *) {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button:where(.petercat-lui,.petercat-lui *),
input:where(.petercat-lui,.petercat-lui *),
optgroup:where(.petercat-lui,.petercat-lui *),
select:where(.petercat-lui,.petercat-lui *),
textarea:where(.petercat-lui,.petercat-lui *) {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button:where(.petercat-lui,.petercat-lui *),
select:where(.petercat-lui,.petercat-lui *) {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button:where(.petercat-lui,.petercat-lui *),
input:where([type='button']):where(.petercat-lui,.petercat-lui *),
input:where([type='reset']):where(.petercat-lui,.petercat-lui *),
input:where([type='submit']):where(.petercat-lui,.petercat-lui *) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring:where(.petercat-lui,.petercat-lui *) {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid:where(.petercat-lui,.petercat-lui *) {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress:where(.petercat-lui,.petercat-lui *) {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button:where(.petercat-lui,.petercat-lui *),
::-webkit-outer-spin-button:where(.petercat-lui,.petercat-lui *) {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search']:where(.petercat-lui,.petercat-lui *) {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration:where(.petercat-lui,.petercat-lui *) {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button:where(.petercat-lui,.petercat-lui *) {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary:where(.petercat-lui,.petercat-lui *) {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote:where(.petercat-lui,.petercat-lui *),
dl:where(.petercat-lui,.petercat-lui *),
dd:where(.petercat-lui,.petercat-lui *),
h1:where(.petercat-lui,.petercat-lui *),
h2:where(.petercat-lui,.petercat-lui *),
h3:where(.petercat-lui,.petercat-lui *),
h4:where(.petercat-lui,.petercat-lui *),
h5:where(.petercat-lui,.petercat-lui *),
h6:where(.petercat-lui,.petercat-lui *),
hr:where(.petercat-lui,.petercat-lui *),
figure:where(.petercat-lui,.petercat-lui *),
p:where(.petercat-lui,.petercat-lui *),
pre:where(.petercat-lui,.petercat-lui *) {
  margin: 0;
}

fieldset:where(.petercat-lui,.petercat-lui *) {
  margin: 0;
  padding: 0;
}

legend:where(.petercat-lui,.petercat-lui *) {
  padding: 0;
}

ol:where(.petercat-lui,.petercat-lui *),
ul:where(.petercat-lui,.petercat-lui *),
menu:where(.petercat-lui,.petercat-lui *) {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog:where(.petercat-lui,.petercat-lui *) {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea:where(.petercat-lui,.petercat-lui *) {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder:where(.petercat-lui,.petercat-lui *), textarea::-moz-placeholder:where(.petercat-lui,.petercat-lui *) {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder:where(.petercat-lui,.petercat-lui *),
textarea::placeholder:where(.petercat-lui,.petercat-lui *) {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button:where(.petercat-lui,.petercat-lui *),
[role="button"]:where(.petercat-lui,.petercat-lui *) {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled:where(.petercat-lui,.petercat-lui *) {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img:where(.petercat-lui,.petercat-lui *),
svg:where(.petercat-lui,.petercat-lui *),
video:where(.petercat-lui,.petercat-lui *),
canvas:where(.petercat-lui,.petercat-lui *),
audio:where(.petercat-lui,.petercat-lui *),
iframe:where(.petercat-lui,.petercat-lui *),
embed:where(.petercat-lui,.petercat-lui *),
object:where(.petercat-lui,.petercat-lui *) {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img:where(.petercat-lui,.petercat-lui *),
video:where(.petercat-lui,.petercat-lui *) {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(.petercat-lui,.petercat-lui *) {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

.visible {
  visibility: visible;
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.bottom-\[120px\] {
  bottom: 120px;
}

.left-0 {
  left: 0px;
}

.left-\[-47px\] {
  left: -47px;
}

.right-0 {
  right: 0px;
}

.right-\[-500px\] {
  right: -500px;
}

.right-\[-8px\] {
  right: -8px;
}

.top-0 {
  top: 0px;
}

.top-\[-14px\] {
  top: -14px;
}

.top-\[-8px\] {
  top: -8px;
}

.top-\[-9px\] {
  top: -9px;
}

.top-\[24px\] {
  top: 24px;
}

.z-\[999\] {
  z-index: 999;
}

.m-1 {
  margin: 0.25rem;
}

.m-\[12px\] {
  margin: 12px;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.mb-1 {
  margin-bottom: 0.25rem;
}

.ml-\[72px\] {
  margin-left: 72px;
}

.mr-4 {
  margin-right: 1rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-px {
  margin-top: 1px;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.hidden {
  display: none;
}

.h-24 {
  height: 6rem;
}

.h-6 {
  height: 1.5rem;
}

.h-\[16px\] {
  height: 16px;
}

.h-\[198px\] {
  height: 198px;
}

.h-\[22px\] {
  height: 22px;
}

.h-\[32px\] {
  height: 32px;
}

.h-\[40px\] {
  height: 40px;
}

.h-\[50\%\] {
  height: 50%;
}

.h-full {
  height: 100%;
}

.w-6 {
  width: 1.5rem;
}

.w-\[100\%\] {
  width: 100%;
}

.w-\[16px\] {
  width: 16px;
}

.w-\[182px\] {
  width: 182px;
}

.w-\[32px\] {
  width: 32px;
}

.w-\[40px\] {
  width: 40px;
}

.w-\[52px\] {
  width: 52px;
}

.w-full {
  width: 100%;
}

.min-w-\[90px\] {
  min-width: 90px;
}

.flex-1 {
  flex: 1 1 0%;
}

.flex-none {
  flex: none;
}

.flex-shrink {
  flex-shrink: 1;
}

.flex-shrink-0 {
  flex-shrink: 0;
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes fadeIn {
  0% {
    opacity: 0;
    transform: translateY(10px);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in {
  animation: fadeIn 0.5s ease-in forwards;
}

@keyframes shake {
  0% {
    transform: translate3d(100%, 100%, 0) scale(0.3);
    opacity: 0;
  }

  5% {
    transform: translate3d(0, 0, 0) scale(1);
    opacity: 1;
  }

  6% {
    transform: rotate(-5deg);
    opacity: 1;
  }

  6.4% {
    transform: rotate(5deg);
    opacity: 1;
  }

  6.8% {
    transform: rotate(-5deg);
    opacity: 1;
  }

  7.2% {
    transform: rotate(5deg);
    opacity: 1;
  }

  7.4% {
    transform: rotate(-5deg);
    opacity: 1;
  }

  7.8% {
    transform: rotate(5deg);
    opacity: 1;
  }

  8.2% {
    transform: rotate(-5deg);
    opacity: 1;
  }

  8.4% {
    transform: rotate(5deg);
    opacity: 1;
  }

  33.33% {
    transform: translate3d(0, 0, 0) scale(1);
    opacity: 1;
  }

  40%, 100% {
    transform: translate3d(100%, 100%, 0) scale(0.3);
    opacity: 0;
  }
}

.animate-shake {
  animation: shake 15s infinite;
}

.cursor-pointer {
  cursor: pointer;
}

.resize {
  resize: both;
}

.flex-row {
  flex-direction: row;
}

.flex-row-reverse {
  flex-direction: row-reverse;
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.justify-start {
  justify-content: flex-start;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-1 {
  gap: 0.25rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-\[12px\] {
  gap: 12px;
}

.overflow-hidden {
  overflow: hidden;
}

.whitespace-pre-wrap {
  white-space: pre-wrap;
}

.rounded-\[10px\] {
  border-radius: 10px;
}

.rounded-\[20px\] {
  border-radius: 20px;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-l-\[20px\] {
  border-top-left-radius: 20px;
  border-bottom-left-radius: 20px;
}

.rounded-br-none {
  border-bottom-right-radius: 0px;
}

.border {
  border-width: 1px;
}

.border-\[0\.5px\] {
  border-width: 0.5px;
}

.border-\[\#e4e4e7\] {
  --tw-border-opacity: 1;
  border-color: rgb(228 228 231 / var(--tw-border-opacity));
}

.bg-\[\#3F3F46\] {
  --tw-bg-opacity: 1;
  background-color: rgb(63 63 70 / var(--tw-bg-opacity));
}

.bg-\[\#F1F1F1\] {
  --tw-bg-opacity: 1;
  background-color: rgb(241 241 241 / var(--tw-bg-opacity));
}

.bg-\[\#FCFCFC\] {
  --tw-bg-opacity: 1;
  background-color: rgb(252 252 252 / var(--tw-bg-opacity));
}

.bg-\[\#f1f1f1\] {
  --tw-bg-opacity: 1;
  background-color: rgb(241 241 241 / var(--tw-bg-opacity));
}

.bg-gray-700 {
  --tw-bg-opacity: 1;
  background-color: rgb(55 65 81 / var(--tw-bg-opacity));
}

.bg-gray-800 {
  --tw-bg-opacity: 1;
  background-color: rgb(31 41 55 / var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.p-0 {
  padding: 0px;
}

.p-3 {
  padding: 0.75rem;
}

.p-\[16px\] {
  padding: 16px;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-\[12px\] {
  padding-left: 12px;
  padding-right: 12px;
}

.px-\[8px\] {
  padding-left: 8px;
  padding-right: 8px;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-\[10px\] {
  padding-top: 10px;
  padding-bottom: 10px;
}

.py-\[4px\] {
  padding-top: 4px;
  padding-bottom: 4px;
}

.pt-2 {
  padding-top: 0.5rem;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.font-sf {
  font-family: SF Pro;
}

.text-\[10px\] {
  font-size: 10px;
}

.text-\[14px\] {
  font-size: 14px;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.font-\[500\] {
  font-weight: 500;
}

.leading-\[22px\] {
  line-height: 22px;
}

.leading-\[28px\] {
  line-height: 28px;
}

.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

.text-blue-600 {
  --tw-text-opacity: 1;
  color: rgb(37 99 235 / var(--tw-text-opacity));
}

.text-gray-400 {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

.text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

.text-gray-900 {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

.text-green-600 {
  --tw-text-opacity: 1;
  color: rgb(22 163 74 / var(--tw-text-opacity));
}

.text-red-600 {
  --tw-text-opacity: 1;
  color: rgb(220 38 38 / var(--tw-text-opacity));
}

.text-red-700 {
  --tw-text-opacity: 1;
  color: rgb(185 28 28 / var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.opacity-0 {
  opacity: 0;
}

.shadow-\[0_8px_8px_-5px_\#00000014\2c _0_16px_24px_-5px_\#00000029\] {
  --tw-shadow: 0 8px 8px -5px #00000014, 0 16px 24px -5px #00000029;
  --tw-shadow-colored: 0 8px 8px -5px var(--tw-shadow-color), 0 16px 24px -5px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-\[0px_8px_32px_-12px_rgba\(0\2c 0\2c 0\2c 0\.1\)\] {
  --tw-shadow: 0px 8px 32px -12px rgba(0,0,0,0.1);
  --tw-shadow-colored: 0px 8px 32px -12px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-xl {
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-\[right\] {
  transition-property: right;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.delay-200 {
  transition-delay: 200ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.duration-500 {
  transition-duration: 500ms;
}

.ease-in {
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.leftMessageContent {
  position: relative;
}

.leftMessageContent .loading {
  width: 74px;
  height: 50px;
  margin-bottom: -10px;
  margin-top: -2px;
  transform: translate(-8px, 0);
}

.leftMessageContent .ant-pro-chat-list-item-message-content{
  padding: 8px 16px 8px 16px;
  gap: 0px;
  border-radius: 18px 18px 18px 0px;
  background: rgba(241, 241, 241, 1);
  /* very important! DO NOT REMOVE */
  transform: translate(1px, 0);
}

.leftMessageContent .ant-pro-chat-list-item-message-content p {
  line-height: 22px;
}

.ant-pro-chat-list-item-message-content p {
  word-break: break-word !important;
}

.ant-pro-chat-chat-list-container {
  overflow-y: auto !important;
}

.ant-pro-chat-list-item.ant-pro-chat-list-item-left{
  overflow-x: visible !important;
  align-items: flex-end;
}

.ant-pro-chat-list-item.ant-pro-chat-list-item-left .ant-pro-chat-list-item-actions{
  display: none;
}

.ant-pro-chat-list-item.ant-pro-chat-list-item-left .ant-pro-chat-message-content {
  overflow: visible !important;
}

.ant-pro-chat-list-item.ant-pro-chat-list-item-right .ant-pro-chat-list-item-message-content{
  padding: 8px 16px 8px 16px;
  gap: 0px;
  border-radius: 18px 18px 4px 18px;
  background: rgba(250, 228, 203, 1);
}

.lui-input-area #question {
  box-shadow: none;
}

.hover\:\!bg-gray-700:hover {
  --tw-bg-opacity: 1 !important;
  background-color: rgb(55 65 81 / var(--tw-bg-opacity)) !important;
}

.hover\:\!bg-white:hover {
  --tw-bg-opacity: 1 !important;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity)) !important;
}

.hover\:shadow-lg:hover {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.active\:cursor-grabbing:active {
  cursor: grabbing;
}
